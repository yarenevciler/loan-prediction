version: '3.8'

services:
  mysql:
    image: mysql:8.0.31
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=%
    ports:
      - "3306:3306"
    networks:
      mlops-net:
        ipv4_address: 172.31.0.2
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql
      - ./sql_scripts/mysql_init.sql:/docker-entrypoint-initdb.d/mysql_init.sql
  mlflow:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        ports:
            - "5001:5000"
        networks:
            mlops-net:
                ipv4_address: 172.31.0.4
        env_file:
            - .env
        environment:
            - S3_MLFLOW_BUCKET=${S3_MLFLOW_BUCKET}
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE} --artifacts-destination s3://${S3_MLFLOW_BUCKET}/ --serve-artifacts --host 0.0.0.0
  streamlit:
    build: ./streamlit_app
    container_name: streamlit_app
    ports:
      - "8502:8501"
    networks:
      mlops-net:
        ipv4_address: 172.31.0.10
    env_file:
      - .env

  fastapi:
    build: .
    container_name: loan_api
    restart: always
    depends_on:
      - mysql
    environment:
      - SQLALCHEMY_DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
    ports:
      - "8000:8000"
    networks:
      mlops-net:
        ipv4_address: 172.31.0.3
    env_file:
      - .env
    volumes:
      - .:/app
  minio:
    restart: always
    image: minio/minio:RELEASE.2024-10-13T13-34-11Z
    container_name: minio
    ports:
        - "9000:9000"
        - "9001:9001"
    networks:
        mlops-net:
            ipv4_address: 172.31.0.9
    env_file:
        - .env
    command: server /data --console-address ':9001' --address ':9000'
    environment:
        - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
        - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes:
        - minio_data:/data

  mc:
    image: minio/mc:RELEASE.2024-10-29T15-34-59Z
    depends_on:
        - minio
    container_name: mc
    networks:
        mlops-net:
            ipv4_address: 172.31.0.5
    env_file:
        - .env
    entrypoint: >
        /bin/sh -c "
        /tmp/wait-for-it.sh minio:9000;
        /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
        /usr/bin/mc mb minio/${S3_MLFLOW_BUCKET};
        exit 0;
        "
    volumes:
        - ./wait-for-it.sh:/tmp/wait-for-it.sh

networks:
  mlops-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16

volumes:
  db_data:
  minio_data: